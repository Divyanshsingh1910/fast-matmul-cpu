  branch-instructions OR branches                    [Hardware event]
  branch-misses                                      [Hardware event]
  bus-cycles                                         [Hardware event]
  cache-misses                                       [Hardware event]
  cache-references                                   [Hardware event]
  cpu-cycles OR cycles                               [Hardware event]
  instructions                                       [Hardware event]
  ref-cycles                                         [Hardware event]
  alignment-faults                                   [Software event]
  bpf-output                                         [Software event]
  cgroup-switches                                    [Software event]
  context-switches OR cs                             [Software event]
  cpu-clock                                          [Software event]
  cpu-migrations OR migrations                       [Software event]
  dummy                                              [Software event]
  emulation-faults                                   [Software event]
  major-faults                                       [Software event]
  minor-faults                                       [Software event]
  page-faults OR faults                              [Software event]
  task-clock                                         [Software event]
  duration_time                                      [Tool event]
  user_time                                          [Tool event]
  system_time                                        [Tool event]

cpu:
  L1-dcache-loads OR cpu/L1-dcache-loads/
  L1-dcache-load-misses OR cpu/L1-dcache-load-misses/
  L1-dcache-stores OR cpu/L1-dcache-stores/
  L1-icache-load-misses OR cpu/L1-icache-load-misses/
  LLC-loads OR cpu/LLC-loads/
  LLC-load-misses OR cpu/LLC-load-misses/
  LLC-stores OR cpu/LLC-stores/
  LLC-store-misses OR cpu/LLC-store-misses/
  dTLB-loads OR cpu/dTLB-loads/
  dTLB-load-misses OR cpu/dTLB-load-misses/
  dTLB-stores OR cpu/dTLB-stores/
  dTLB-store-misses OR cpu/dTLB-store-misses/
  iTLB-load-misses OR cpu/iTLB-load-misses/
  branch-loads OR cpu/branch-loads/
  branch-load-misses OR cpu/branch-load-misses/
  node-loads OR cpu/node-loads/
  node-load-misses OR cpu/node-load-misses/
  branch-instructions OR cpu/branch-instructions/    [Kernel PMU event]
  branch-misses OR cpu/branch-misses/                [Kernel PMU event]
  bus-cycles OR cpu/bus-cycles/                      [Kernel PMU event]
  cache-misses OR cpu/cache-misses/                  [Kernel PMU event]
  cache-references OR cpu/cache-references/          [Kernel PMU event]
  cpu-cycles OR cpu/cpu-cycles/                      [Kernel PMU event]
  instructions OR cpu/instructions/                  [Kernel PMU event]
  mem-loads OR cpu/mem-loads/                        [Kernel PMU event]
  mem-loads-aux OR cpu/mem-loads-aux/                [Kernel PMU event]
  mem-stores OR cpu/mem-stores/                      [Kernel PMU event]
  ref-cycles OR cpu/ref-cycles/                      [Kernel PMU event]
  slots OR cpu/slots/                                [Kernel PMU event]
  topdown-bad-spec OR cpu/topdown-bad-spec/          [Kernel PMU event]
  topdown-be-bound OR cpu/topdown-be-bound/          [Kernel PMU event]
  topdown-br-mispredict OR cpu/topdown-br-mispredict/[Kernel PMU event]
  topdown-fe-bound OR cpu/topdown-fe-bound/          [Kernel PMU event]
  topdown-fetch-lat OR cpu/topdown-fetch-lat/        [Kernel PMU event]
  topdown-heavy-ops OR cpu/topdown-heavy-ops/        [Kernel PMU event]
  topdown-mem-bound OR cpu/topdown-mem-bound/        [Kernel PMU event]
  topdown-retiring OR cpu/topdown-retiring/          [Kernel PMU event]
  cstate_core/c1-residency/                          [Kernel PMU event]
  cstate_core/c6-residency/                          [Kernel PMU event]
  cstate_pkg/c2-residency/                           [Kernel PMU event]
  cstate_pkg/c6-residency/                           [Kernel PMU event]
  intel_bts//                                        [Kernel PMU event]
  intel_pt//                                         [Kernel PMU event]
  msr/aperf/                                         [Kernel PMU event]
  msr/cpu_thermal_margin/                            [Kernel PMU event]
  msr/mperf/                                         [Kernel PMU event]
  msr/smi/                                           [Kernel PMU event]
  msr/tsc/                                           [Kernel PMU event]
  power/energy-pkg/                                  [Kernel PMU event]
  power/energy-psys/                                 [Kernel PMU event]
  power/energy-ram/                                  [Kernel PMU event]
  uncore_iio_free_running/bw_in_port0/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port1/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port2/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port3/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port4/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port5/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port6/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port7/               [Kernel PMU event]
  uncore_iio_free_running/bw_out_port0/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port1/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port2/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port3/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port4/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port5/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port6/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port7/              [Kernel PMU event]
  uncore_iio_free_running/ioclk/                     [Kernel PMU event]
  uncore_iio_free_running/bw_in_port0/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port1/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port2/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port3/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port4/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port5/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port6/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port7/               [Kernel PMU event]
  uncore_iio_free_running/bw_out_port0/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port1/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port2/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port3/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port4/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port5/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port6/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port7/              [Kernel PMU event]
  uncore_iio_free_running/ioclk/                     [Kernel PMU event]
  uncore_iio_free_running/bw_in_port0/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port1/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port2/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port3/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port4/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port5/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port6/               [Kernel PMU event]
  uncore_iio_free_running/bw_in_port7/               [Kernel PMU event]
  uncore_iio_free_running/bw_out_port0/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port1/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port2/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port3/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port4/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port5/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port6/              [Kernel PMU event]
  uncore_iio_free_running/bw_out_port7/              [Kernel PMU event]
  uncore_iio_free_running/ioclk/                     [Kernel PMU event]
  uncore_imc/cas_count_read/                         [Kernel PMU event]
  uncore_imc/cas_count_write/                        [Kernel PMU event]
  uncore_imc/clockticks/                             [Kernel PMU event]
  uncore_imc/cas_count_read/                         [Kernel PMU event]
  uncore_imc/cas_count_write/                        [Kernel PMU event]
  uncore_imc/clockticks/                             [Kernel PMU event]
  uncore_imc/cas_count_read/                         [Kernel PMU event]
  uncore_imc/cas_count_write/                        [Kernel PMU event]
  uncore_imc/clockticks/                             [Kernel PMU event]
  uncore_imc_free_running/dclk/                      [Kernel PMU event]
  uncore_imc_free_running/rpq_cycles/                [Kernel PMU event]
  uncore_imc_free_running/wpq_cycles/                [Kernel PMU event]
  uncore_imc_free_running/dclk/                      [Kernel PMU event]
  uncore_imc_free_running/rpq_cycles/                [Kernel PMU event]
  uncore_imc_free_running/wpq_cycles/                [Kernel PMU event]
  uncore_imc_free_running/dclk/                      [Kernel PMU event]
  uncore_imc_free_running/rpq_cycles/                [Kernel PMU event]
  uncore_imc_free_running/wpq_cycles/                [Kernel PMU event]

cache:
  l1d.hwpf_miss
       [L1D.HWPF_MISS]
  l1d.replacement
       [Counts the number of cache lines replaced in L1 data cache]
  l1d_pend_miss.fb_full
       [Number of cycles a demand request has waited due to L1D Fill Buffer
        (FB) unavailability]
  l1d_pend_miss.fb_full_periods
       [Number of phases a demand request has waited due to L1D Fill Buffer
        (FB) unavailability]
  l1d_pend_miss.l2_stalls
       [Number of cycles a demand request has waited due to L1D due to lack of
        L2 resources]
  l1d_pend_miss.pending
       [Number of L1D misses that are outstanding]
  l1d_pend_miss.pending_cycles
       [Cycles with L1D load Misses outstanding]
  l2_lines_in.all
       [L2 cache lines filling L2]
  l2_lines_out.non_silent
       [Modified cache lines that are evicted by L2 cache when triggered by an
        L2 cache fill]
  l2_lines_out.silent
       [Non-modified cache lines that are silently dropped by L2 cache when
        triggered by an L2 cache fill]
  l2_lines_out.useless_hwpf
       [Cache lines that have been L2 hardware prefetched but not used by
        demand accesses]
  l2_request.all
       [All accesses to L2 cache [This event is alias to L2_RQSTS.REFERENCES]]
  l2_request.miss
       [Read requests with true-miss in L2 cache. [This event is alias to
        L2_RQSTS.MISS]]
  l2_rqsts.all_code_rd
       [L2 code requests]
  l2_rqsts.all_demand_data_rd
       [Demand Data Read access L2 cache]
  l2_rqsts.all_demand_miss
       [Demand requests that miss L2 cache]
  l2_rqsts.all_demand_references
       [Demand requests to L2 cache]
  l2_rqsts.all_hwpf
       [L2_RQSTS.ALL_HWPF]
  l2_rqsts.all_rfo
       [RFO requests to L2 cache]
  l2_rqsts.code_rd_hit
       [L2 cache hits when fetching instructions, code reads]
  l2_rqsts.code_rd_miss
       [L2 cache misses when fetching instructions]
  l2_rqsts.demand_data_rd_hit
       [Demand Data Read requests that hit L2 cache]
  l2_rqsts.demand_data_rd_miss
       [Demand Data Read miss L2 cache]
  l2_rqsts.hwpf_miss
       [L2_RQSTS.HWPF_MISS]
  l2_rqsts.miss
       [Read requests with true-miss in L2 cache. [This event is alias to
        L2_REQUEST.MISS]]
  l2_rqsts.references
       [All accesses to L2 cache [This event is alias to L2_REQUEST.ALL]]
  l2_rqsts.rfo_hit
       [RFO requests that hit L2 cache]
  l2_rqsts.rfo_miss
       [RFO requests that miss L2 cache]
  l2_rqsts.swpf_hit
       [SW prefetch requests that hit L2 cache]
  l2_rqsts.swpf_miss
       [SW prefetch requests that miss L2 cache]
  l2_trans.l2_wb
       [L2 writebacks that access L2 cache]
  longest_lat_cache.miss
       [Core-originated cacheable requests that missed L3 (Except hardware
        prefetches to the L3)]
  longest_lat_cache.reference
       [Core-originated cacheable requests that refer to L3 (Except hardware
        prefetches to the L3)]
  mem_inst_retired.all_loads
       [Retired load instructions Supports address when precise (Precise
        event)]
  mem_inst_retired.all_stores
       [Retired store instructions Supports address when precise (Precise
        event)]
  mem_inst_retired.any
       [All retired memory instructions Supports address when precise (Precise
        event)]
  mem_inst_retired.lock_loads
       [Retired load instructions with locked access Supports address when
        precise (Precise event)]
  mem_inst_retired.split_loads
       [Retired load instructions that split across a cacheline boundary
        Supports address when precise (Precise event)]
  mem_inst_retired.split_stores
       [Retired store instructions that split across a cacheline boundary
        Supports address when precise (Precise event)]
  mem_inst_retired.stlb_miss_loads
       [Retired load instructions that miss the STLB Supports address when
        precise (Precise event)]
  mem_inst_retired.stlb_miss_stores
       [Retired store instructions that miss the STLB Supports address when
        precise (Precise event)]
  mem_load_completed.l1_miss_any
       [Completed demand load uops that miss the L1 d-cache]
  mem_load_l3_hit_retired.xsnp_fwd
       [Retired load instructions whose data sources were HitM responses from
        shared L3 Supports address when precise (Precise event)]
  mem_load_l3_hit_retired.xsnp_miss
       [Retired load instructions whose data sources were L3 hit and
        cross-core snoop missed in on-pkg core cache Supports address when
        precise (Precise event)]
  mem_load_l3_hit_retired.xsnp_no_fwd
       [Retired load instructions whose data sources were L3 and cross-core
        snoop hits in on-pkg core cache Supports address when precise (Precise
        event)]
  mem_load_l3_hit_retired.xsnp_none
       [Retired load instructions whose data sources were hits in L3 without
        snoops required Supports address when precise (Precise event)]
  mem_load_l3_miss_retired.local_dram
       [Retired load instructions which data sources missed L3 but serviced
        from local dram Supports address when precise (Precise event)]
  mem_load_l3_miss_retired.remote_dram
       [MEM_LOAD_L3_MISS_RETIRED.REMOTE_DRAM Supports address when precise
        (Precise event)]
  mem_load_l3_miss_retired.remote_fwd
       [Retired load instructions whose data sources was forwarded from a
        remote cache Supports address when precise (Precise event)]
  mem_load_l3_miss_retired.remote_hitm
       [MEM_LOAD_L3_MISS_RETIRED.REMOTE_HITM Supports address when precise
        (Precise event)]
  mem_load_l3_miss_retired.remote_pmm
       [Retired load instructions with remote Intel(R) Optane(TM) DC
        persistent memory as the data source where the data request missed all
        caches (Precise event)]
  mem_load_misc_retired.uc
       [Retired instructions with at least 1 uncacheable load or lock Supports
        address when precise (Precise event)]
  mem_load_retired.fb_hit
       [Number of completed demand load requests that missed the L1, but hit
        the FB(fill buffer), because a preceding miss to the same cacheline
        initiated the line to be brought into L1, but data is not yet ready in
        L1 Supports address when precise (Precise event)]
  mem_load_retired.l1_hit
       [Retired load instructions with L1 cache hits as data sources Supports
        address when precise (Precise event)]
  mem_load_retired.l1_miss
       [Retired load instructions missed L1 cache as data sources Supports
        address when precise (Precise event)]
  mem_load_retired.l2_hit
       [Retired load instructions with L2 cache hits as data sources Supports
        address when precise (Precise event)]
  mem_load_retired.l2_miss
       [Retired load instructions missed L2 cache as data sources Supports
        address when precise (Precise event)]
  mem_load_retired.l3_hit
       [Retired load instructions with L3 cache hits as data sources Supports
        address when precise (Precise event)]
  mem_load_retired.l3_miss
       [Retired load instructions missed L3 cache as data sources Supports
        address when precise (Precise event)]
  mem_load_retired.local_pmm
       [Retired load instructions with local Intel(R) Optane(TM) DC persistent
        memory as the data source where the data request missed all caches
        Supports address when precise (Precise event)]
  mem_store_retired.l2_hit
       [MEM_STORE_RETIRED.L2_HIT]
  mem_uop_retired.any
       [Retired memory uops for any access]
  ocr.demand_code_rd.l3_hit
       [Counts demand instruction fetches and L1 instruction cache prefetches
        that hit in the L3 or were snooped from another core's caches on the
        same socket]
  ocr.demand_code_rd.l3_hit.snoop_hitm
       [Counts demand instruction fetches and L1 instruction cache prefetches
        that resulted in a snoop hit a modified line in another core's caches
        which forwarded the data]
  ocr.demand_code_rd.snc_cache.hit_with_fwd
       [Counts demand instruction fetches and L1 instruction cache prefetches
        that either hit a non-modified line in a distant L3 Cache or were
        snooped from a distant core's L1/L2 caches on this socket when the
        system is in SNC (sub-NUMA cluster) mode]
  ocr.demand_code_rd.snc_cache.hitm
       [Counts demand instruction fetches and L1 instruction cache prefetches
        that hit a modified line in a distant L3 Cache or were snooped from a
        distant core's L1/L2 caches on this socket when the system is in SNC
        (sub-NUMA cluster) mode]
  ocr.demand_data_rd.l3_hit
       [Counts demand data reads that hit in the L3 or were snooped from
        another core's caches on the same socket]
  ocr.demand_data_rd.l3_hit.snoop_hit_no_fwd
       [Counts demand data reads that resulted in a snoop that hit in another
        core, which did not forward the data]
  ocr.demand_data_rd.l3_hit.snoop_hit_with_fwd
       [Counts demand data reads that resulted in a snoop hit in another
        core's caches which forwarded the unmodified data to the requesting
        core]
  ocr.demand_data_rd.l3_hit.snoop_hitm
       [Counts demand data reads that resulted in a snoop hit a modified line
        in another core's caches which forwarded the data]
  ocr.demand_data_rd.remote_cache.snoop_hit_with_fwd
       [Counts demand data reads that were supplied by a cache on a remote
        socket where a snoop hit in another core's caches which forwarded the
        unmodified data to the requesting core]
  ocr.demand_data_rd.remote_cache.snoop_hitm
       [Counts demand data reads that were supplied by a cache on a remote
        socket where a snoop hit a modified line in another core's caches
        which forwarded the data]
  ocr.demand_data_rd.snc_cache.hit_with_fwd
       [Counts demand data reads that either hit a non-modified line in a
        distant L3 Cache or were snooped from a distant core's L1/L2 caches on
        this socket when the system is in SNC (sub-NUMA cluster) mode]
  ocr.demand_data_rd.snc_cache.hitm
       [Counts demand data reads that hit a modified line in a distant L3
        Cache or were snooped from a distant core's L1/L2 caches on this
        socket when the system is in SNC (sub-NUMA cluster) mode]
  ocr.demand_rfo.l3_hit
       [Counts demand reads for ownership (RFO) requests and software
        prefetches for exclusive ownership (PREFETCHW) that hit in the L3 or
        were snooped from another core's caches on the same socket]
  ocr.demand_rfo.l3_hit.snoop_hitm
       [Counts demand reads for ownership (RFO) requests and software
        prefetches for exclusive ownership (PREFETCHW) that resulted in a
        snoop hit a modified line in another core's caches which forwarded the
        data]
  ocr.demand_rfo.snc_cache.hit_with_fwd
       [Counts demand reads for ownership (RFO) requests and software
        prefetches for exclusive ownership (PREFETCHW) that either hit a
        non-modified line in a distant L3 Cache or were snooped from a distant
        core's L1/L2 caches on this socket when the system is in SNC (sub-NUMA
        cluster) mode]
  ocr.demand_rfo.snc_cache.hitm
       [Counts demand reads for ownership (RFO) requests and software
        prefetches for exclusive ownership (PREFETCHW) that hit a modified
        line in a distant L3 Cache or were snooped from a distant core's L1/L2
        caches on this socket when the system is in SNC (sub-NUMA cluster)
        mode]
  ocr.hwpf_l3.l3_hit
       [Counts hardware prefetches to the L3 only that hit in the L3 or were
        snooped from another core's caches on the same socket]
  ocr.reads_to_core.l3_hit
       [Counts all (cacheable) data read, code read and RFO requests including
        demands and prefetches to the core caches (L1 or L2) that hit in the
        L3 or were snooped from another core's caches on the same socket]
  ocr.reads_to_core.l3_hit.snoop_hit_no_fwd
       [Counts all (cacheable) data read, code read and RFO requests including
        demands and prefetches to the core caches (L1 or L2) that resulted in
        a snoop that hit in another core, which did not forward the data]
  ocr.reads_to_core.l3_hit.snoop_hit_with_fwd
       [Counts all (cacheable) data read, code read and RFO requests including
        demands and prefetches to the core caches (L1 or L2) that resulted in
        a snoop hit in another core's caches which forwarded the unmodified
        data to the requesting core]
  ocr.reads_to_core.l3_hit.snoop_hitm
       [Counts all (cacheable) data read, code read and RFO requests including
        demands and prefetches to the core caches (L1 or L2) that resulted in
        a snoop hit a modified line in another core's caches which forwarded
        the data]
  ocr.reads_to_core.remote_cache.snoop_fwd
       [Counts all (cacheable) data read, code read and RFO requests including
        demands and prefetches to the core caches (L1 or L2) that were
        supplied by a cache on a remote socket where a snoop was sent and data
        was returned (Modified or Not Modified)]
  ocr.reads_to_core.remote_cache.snoop_hit_with_fwd
       [Counts all (cacheable) data read, code read and RFO requests including
        demands and prefetches to the core caches (L1 or L2) that were
        supplied by a cache on a remote socket where a snoop hit in another
        core's caches which forwarded the unmodified data to the requesting
        core]
  ocr.reads_to_core.remote_cache.snoop_hitm
       [Counts all (cacheable) data read, code read and RFO requests including
        demands and prefetches to the core caches (L1 or L2) that were
        supplied by a cache on a remote socket where a snoop hit a modified
        line in another core's caches which forwarded the data]
  ocr.reads_to_core.snc_cache.hit_with_fwd
       [Counts all (cacheable) data read, code read and RFO requests including
        demands and prefetches to the core caches (L1 or L2) that either hit a
        non-modified line in a distant L3 Cache or were snooped from a distant
        core's L1/L2 caches on this socket when the system is in SNC (sub-NUMA
        cluster) mode]
  ocr.reads_to_core.snc_cache.hitm
       [Counts all (cacheable) data read, code read and RFO requests including
        demands and prefetches to the core caches (L1 or L2) that hit a
        modified line in a distant L3 Cache or were snooped from a distant
        core's L1/L2 caches on this socket when the system is in SNC (sub-NUMA
        cluster) mode]
  ocr.rfo_to_core.l3_hit_m
       [Counts demand reads for ownership (RFO), hardware prefetch RFOs (which
        bring data to L2), and software prefetches for exclusive ownership
        (PREFETCHW) that hit to a (M)odified cacheline in the L3 or snoop
        filter]
  ocr.streaming_wr.l3_hit
       [Counts streaming stores that hit in the L3 or were snooped from
        another core's caches on the same socket]
  offcore_requests.all_requests
       [OFFCORE_REQUESTS.ALL_REQUESTS]
  offcore_requests.data_rd
       [Demand and prefetch data reads]
  offcore_requests.demand_code_rd
       [Cacheable and noncacheable code read requests]
  offcore_requests.demand_data_rd
       [Demand Data Read requests sent to uncore]
  offcore_requests.demand_rfo
       [Demand RFO requests including regular RFOs, locks, ItoM]
  offcore_requests_outstanding.cycles_with_data_rd
       [OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DATA_RD]
  offcore_requests_outstanding.cycles_with_demand_code_rd
       [Cycles with offcore outstanding Code Reads transactions in the
        SuperQueue (SQ), queue to uncore]
  offcore_requests_outstanding.cycles_with_demand_data_rd
       [Cycles where at least 1 outstanding demand data read request is
        pending]
  offcore_requests_outstanding.cycles_with_demand_rfo
       [OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_RFO]
  offcore_requests_outstanding.data_rd
       [OFFCORE_REQUESTS_OUTSTANDING.DATA_RD]
  offcore_requests_outstanding.demand_code_rd
       [Offcore outstanding Code Reads transactions in the SuperQueue (SQ),
        queue to uncore, every cycle]
  offcore_requests_outstanding.demand_data_rd
       [For every cycle, increments by the number of outstanding demand data
        read requests pending]
  sq_misc.bus_lock
       [Counts bus locks, accounts for cache line split locks and UC locks]
  sw_prefetch_access.any
       [Counts the number of PREFETCHNTA, PREFETCHW, PREFETCHT0, PREFETCHT1 or
        PREFETCHT2 instructions executed]
  sw_prefetch_access.nta
       [Number of PREFETCHNTA instructions executed]
  sw_prefetch_access.prefetchw
       [Number of PREFETCHW instructions executed]
  sw_prefetch_access.t0
       [Number of PREFETCHT0 instructions executed]
  sw_prefetch_access.t1_t2
       [Number of PREFETCHT1 or PREFETCHT2 instructions executed]

